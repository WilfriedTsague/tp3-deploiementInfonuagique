# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  buildConfiguration: 'Release'
  serviceconnection: 'sc-azure-Hinault-TP 3'

stages:
- stage: 'Build'
  displayName: "build , execution des tests et publication"
  pool:
    vmImage: ubuntu-latest
  jobs:
    - job: 'BuildAPIs'
      steps:
      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: '9.0.101'
          installationPath: $(Agent.ToolsDirectory)/dotnet 

      - task: DotNetCoreCLI@2
        displayName: 'Restauration des packages NuGet'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          feedsToUse: 'select'
      
      - task: DotNetCoreCLI@2
        displayName: 'Execution des test unitaires'
        inputs:
          command: 'test'
          projects: |
            '**/BanqueTardiTP/*.UnitTest/*.UnitTest.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Compilation des API et MVC'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
          
      
      - task: DotNetCoreCLI@2
        displayName: "Publication de Assurances.API"
        inputs:
          command: publish
          publishWebProjects: false
          projects: '**/BanqueTardiTP/Assurances.API/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - task: DotNetCoreCLI@2
        displayName: "Publication de CalculInterets.API"
        inputs:
          command: publish
          publishWebProjects: false
          projects: '**/BanqueTardiTP/CalculInterets.API/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      - task: DotNetCoreCLI@2
        displayName: "publication de l'application MVC"
        inputs:
          command: publish
          publishWebProjects: true
          projects: '**/BanqueTardiTP/BanqueTardi/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - task: DotNetCoreCLI@2
        displayName: "Publication de CarteDeCredit.API"
        inputs:
          command: publish
          publishWebProjects: false
          projects: '**/BanqueTardiTP/CarteDeCredit.API/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'        
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
        displayName: 'Publication du package dans azure DevOps'

- stage: 'DeployDev'
  displayName: "Deploiment en Dev"
  pool:
    vmImage: ubuntu-latest
  dependsOn: Build
  jobs:
    - deployment: 'DeployAPIsToDev'
      environment: 'dev'
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureWebApp@1
              displayName: "Déploiement de Assurances.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apiassurance-fnz77m5mskwra'
                #utiliser $(System.ArtifactsDirectory)
                package: '$(Build.ArtifactStagingDirectory)/Assurances.API.zip'
            - task: AzureWebApp@1
              displayName: "Déploiement de CalculInterets.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apiinteret-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/CalculInterets.API.zip'
            - task: AzureWebApp@1
              displayName: "Déploiement de CarteDeCredit.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apicredit-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/CarteDeCredit.API.zip'

    - deployment: 'DeployMVCToDev'
      environment: 'dev'
      dependsOn: 'DeployAPIsToDev'
      condition: succeeded()
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              displayName: 'Telecharger Artefact pour deploiement MVC'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                itemPattern: '**/BanqueTardiMVC/*.zip'
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureWebApp@1
              displayName: "Deploiement du MVC "
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-mvc-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/BanqueTardiMVC.zip'

- stage: 'DeployProd'
  displayName: "Deploiment en Prod"
  pool:
    vmImage: ubuntu-latest
  dependsOn: 'DeployDev'
  jobs:
    - deployment: 'DeployAPIsToPro'
      environment: 'pro'
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureWebApp@1
              displayName: "Déploiement de Assurances.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apiassurance-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/Assurances.API'
            - task: AzureWebApp@1
              displayName: "Déploiement de CalculInterets.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apiinteret-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/CalculInterets.API'
            - task: AzureWebApp@1
              displayName: "Déploiement de CarteDeCredit.API"
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-apicredit-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/CarteDeCredit.API'
    
    - deployment: 'DeployMVCProd'
      environment: 'pro'
      dependsOn: 'DeployAPIsToPro'
      condition: succeeded()
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              displayName: 'Telecharger Artefact pour deploiement MVC'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                itemPattern: '**/BanqueTardiMVC/*.zip'
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureWebApp@1
              displayName: "Deploiement du MVC "
              inputs:
                azureSubscription: $(serviceconnection)
                appType: webApp
                appName: 'webapp-mvc-fnz77m5mskwra'
                package: '$(Build.ArtifactStagingDirectory)/BanqueTardiMVC'
